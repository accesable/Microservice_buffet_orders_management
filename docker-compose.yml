version: '3.1'

services:
  db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: my-secret-pw
      MYSQL_DATABASE: restaurant_services_db
    ports:
      - "3306:3306"
    volumes:
      - my-db_data:/var/lib/mysql
    networks:
      - my_custom_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: my-secret-pw
    networks:
      - my_custom_network
    depends_on:
      - db

  mongodb:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongoadminpassword
    volumes:
      - mongodb_data_container:/data/db
    ports:
      - "27017:27017"
    networks:
      - my_custom_network

  mongo-express:
    image: mongo-express:latest
    restart: always
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongoadminpassword
    ports:
      - "8081:8081"
    networks:
      - my_custom_network
  redis:
    image: redis:latest
    container_name: myredis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - my_custom_network

  # auth_server:
  #   build: ./AuthServer
  #   ports:
  #     - "8086:8086"
  #   environment:
  #     DB_HOST: db
  #     REDIS_HOST: myredis
  #     REDIS_PORT: 6379
  #     DB_USERNAME: root
  #     DB_PASSWORD: my-secret-pw
  #     JWT_SECRET: edwyg4aebo
  #     JWT_REFRESH_SECRET: 2e0d94835e4f76eff03f6bdff49e37f3c433719ffa27e4aba8e18266ef7c2d45
  #     DB_NAME: express_auth_server
  #   networks:
  #     - my_custom_network
  #   depends_on:
  #     - db
  #     - redis

  # socker_server:
  #   build: ./socket_server  # Ensure the image name and tag are correct
  #   ports:
  #     - "8085:8085"
  #   environment:
  #     PORT: 8085
  #     DB_USERNAME: mongoadmin
  #     DB_PASSWORD: mongoadminpassword
  #     DB_HOST: mongodb
  #     DB_PORT: 27017
  #     DB_NAME: order_service
  #   networks:
  #     - my_custom_network
  #   depends_on:
  #     - db
  #     - redis

networks:
  my_custom_network:
    driver: bridge

volumes:
  my-db_data:
  mongodb_data_container:
  redis-data:
